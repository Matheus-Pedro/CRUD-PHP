# services:
#   web: 
#     image: nginx:latest
#     container_name: nginx
#     restart: always
#     ports:
#       - "80:80"
#     volumes:
#       - ./www:/www
#       - ./site.conf:/etc/nginx/conf.d/site.conf
#     depends_on:
#       - php  # Garante que o serviço PHP esteja em execução antes do Nginx
#     networks:
#       - tunnel
#     healthcheck:  # Verificação de saúde do Nginx
#       test: ["CMD", "curl", "-f", "http://localhost"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
  
#   php:
#     build:
#       context: .
#       dockerfile: php-fpm.dockerfile
#     container_name: php-fpm
#     volumes:
#       - ./www:/www
#     depends_on:
#       - db  # Garante que o banco de dados esteja em execução antes do PHP
#     networks:
#       - tunnel
  
#   db:
#     build:
#       context: .
#       dockerfile: mysql.dockerfile
#     container_name: mysql
#     ports:
#       - "3306:3306"
#     restart: always
#     env_file:
#       - ./.env
#     volumes:
#       - db-volume:/var/lib/mysql  # Use um volume nomeado para persistência de dados

#   cloudflared:
#     image: cloudflare/cloudflared:latest
#     container_name: cloudflared
#     command: tunnel --no-autoupdate run --token eyJhIjoiNjEzNWYyYThjYjVmZWUzZjEzZDI0ZDMxOTRjYmE2NzQiLCJ0IjoiYzE2YTI2Y2EtMmRmNS00YjlmLTk1MzUtNjAyZTFlYjMyZTBjIiwicyI6Ik5tRmlPV0l3TkRjdFptWTJPUzAwWldFMExXSXlaVEV0T1dVMU9EQTBOR1UxTUdJeSJ9
#     networks:
#       - tunnel
#     restart: unless-stopped

# networks:
#   tunnel:
#     external: true  # Certifique-se de que a rede externa 'tunnel' exista

# volumes:
#   db-volume:  # Defina o volume nomeado para o MySQL


services:
  web: 
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./www:/www
      - ./site.conf:/etc/nginx/conf.d/site.conf
    links:
      - php
  
  php:
    build:
      context: .
      dockerfile: php-fpm.dockerfile
    container_name: php-fpm
    volumes:
      - ./www:/www
    links:
      - db
  
  db:
    build:
      context: .
      dockerfile: mysql.dockerfile
    container_name: mysql
    ports:
      - "3306:3306"
    restart: always
    env_file:
      - ./.env
    volumes:
      - ./db-volume:/var/lib/mysql
